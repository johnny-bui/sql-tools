<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.htwds</groupId>
	<artifactId>jaquel</artifactId>
	<version>1.0-beta.1</version>
	<packaging>jar</packaging>

	<name>jaquel</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<gensource.dir>target/generated-sources</gensource.dir>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>de.htwds</groupId>
				<artifactId>objectmacro-maven-plugin</artifactId>
				<version>1.0-beta.1</version>
				<!-- =============================================
					All config parameters here are used for 
					every objectmacro files defined below, unless
					they are override in the tag <template>

					The default target language is java, which is
					not shown here. You can use it like 
					<language>scala</language>.

					To config the flag informativ (-i), quiet (-q), or
					verbose (-v) you can use the tag 
					<informativ>informativ|quiet|verbose</informativ>.
					The default value is informativ.
				================================================== -->
				<configuration>
					<!-- by default code will be generated 
						(the option -g)
					-->
					<generateCode>true</generateCode>
					<!-- and the plugin uses the the option strict 
						(the option -s  of objectmacro).
					-->
					<strict>true</strict>
					<!-- All generated file will be saved in this folder  
						(the option -d directory). 
						
						The default value is
 						${basedir}/target/generated-sources/objectmacro
					-->
					<!--directory>${gensource.dir}/objectmacro</directory-->
					<!-- This is the destinate package for all template
						(the option -p packagename).

						The default value ist template.
					-->
					<packagename>de.htwds.jaquel.mysql</packagename>
				</configuration>
				<executions>
					<execution>
						<!-- ================================================== 
							you can define particular options for each template
							file if you need. These option override the options
							defined above.
						==================================================== -->
						<configuration>
							<templates>
								<!-- 
									a template contains one and only one tag 
									<file>. The file is the template file, from which
									you want to generate target code for your templates.
								-->
								<template>
									<file>src/main/resources/mysql.objectmacro</file>
								</template>
							</templates>
						</configuration>
						<!-- ===================================================
							the plugin provides only one goal: objectmacro. This
							goal is called in the generate-sources phase. 
						=================================================== -->
						<goals>
							<goal>objectmacro</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- ==========================================================
				You need this plugin to tell Maven to add the generated source
				in sources. Otherwise you cannot compile files, which depends
				on generated files. Because they are not in class path.
				NOTE: you don't need this plugin since the version 1.0-beta.1 
			============================================================ -->
			<!-- plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${gensource.dir}/objectmacro/</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.5.7.201204190339</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>	  
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Internal Repository</name>
			<!-- ================ C A U T I O N =======================
				Define this property in your settings.xml! 
			=========================================================== -->
			<url>${internal.repo.path}</url>
		</repository>
	</distributionManagement>
</project>
