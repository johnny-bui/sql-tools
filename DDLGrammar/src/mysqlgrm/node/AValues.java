/* This file was generated by SableCC (http://www.sablecc.org/). */

package mysqlgrm.node;

import java.util.*;
import mysqlgrm.analysis.*;

@SuppressWarnings("nls")
public final class AValues extends PValues
{
    private PSingleValue _singleValue_;
    private final LinkedList<PMoreSingleValue> _moreSingleValue_ = new LinkedList<PMoreSingleValue>();

    public AValues()
    {
        // Constructor
    }

    public AValues(
        @SuppressWarnings("hiding") PSingleValue _singleValue_,
        @SuppressWarnings("hiding") List<?> _moreSingleValue_)
    {
        // Constructor
        setSingleValue(_singleValue_);

        setMoreSingleValue(_moreSingleValue_);

    }

    @Override
    public Object clone()
    {
        return new AValues(
            cloneNode(this._singleValue_),
            cloneList(this._moreSingleValue_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAValues(this);
    }

    public PSingleValue getSingleValue()
    {
        return this._singleValue_;
    }

    public void setSingleValue(PSingleValue node)
    {
        if(this._singleValue_ != null)
        {
            this._singleValue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._singleValue_ = node;
    }

    public LinkedList<PMoreSingleValue> getMoreSingleValue()
    {
        return this._moreSingleValue_;
    }

    public void setMoreSingleValue(List<?> list)
    {
        for(PMoreSingleValue e : this._moreSingleValue_)
        {
            e.parent(null);
        }
        this._moreSingleValue_.clear();

        for(Object obj_e : list)
        {
            PMoreSingleValue e = (PMoreSingleValue) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._moreSingleValue_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._singleValue_)
            + toString(this._moreSingleValue_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._singleValue_ == child)
        {
            this._singleValue_ = null;
            return;
        }

        if(this._moreSingleValue_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._singleValue_ == oldChild)
        {
            setSingleValue((PSingleValue) newChild);
            return;
        }

        for(ListIterator<PMoreSingleValue> i = this._moreSingleValue_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PMoreSingleValue) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
