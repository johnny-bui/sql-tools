/* This file was generated by SableCC (http://www.sablecc.org/). */

package mysqlgrm.node;

import mysqlgrm.analysis.*;

@SuppressWarnings("nls")
public final class AValueClausel extends PValueClausel
{
    private TLPar _lValuePar_;
    private PValues _value_;
    private TRPar _rValuePar_;

    public AValueClausel()
    {
        // Constructor
    }

    public AValueClausel(
        @SuppressWarnings("hiding") TLPar _lValuePar_,
        @SuppressWarnings("hiding") PValues _value_,
        @SuppressWarnings("hiding") TRPar _rValuePar_)
    {
        // Constructor
        setLValuePar(_lValuePar_);

        setValue(_value_);

        setRValuePar(_rValuePar_);

    }

    @Override
    public Object clone()
    {
        return new AValueClausel(
            cloneNode(this._lValuePar_),
            cloneNode(this._value_),
            cloneNode(this._rValuePar_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAValueClausel(this);
    }

    public TLPar getLValuePar()
    {
        return this._lValuePar_;
    }

    public void setLValuePar(TLPar node)
    {
        if(this._lValuePar_ != null)
        {
            this._lValuePar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lValuePar_ = node;
    }

    public PValues getValue()
    {
        return this._value_;
    }

    public void setValue(PValues node)
    {
        if(this._value_ != null)
        {
            this._value_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._value_ = node;
    }

    public TRPar getRValuePar()
    {
        return this._rValuePar_;
    }

    public void setRValuePar(TRPar node)
    {
        if(this._rValuePar_ != null)
        {
            this._rValuePar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rValuePar_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lValuePar_)
            + toString(this._value_)
            + toString(this._rValuePar_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lValuePar_ == child)
        {
            this._lValuePar_ = null;
            return;
        }

        if(this._value_ == child)
        {
            this._value_ = null;
            return;
        }

        if(this._rValuePar_ == child)
        {
            this._rValuePar_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lValuePar_ == oldChild)
        {
            setLValuePar((TLPar) newChild);
            return;
        }

        if(this._value_ == oldChild)
        {
            setValue((PValues) newChild);
            return;
        }

        if(this._rValuePar_ == oldChild)
        {
            setRValuePar((TRPar) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
