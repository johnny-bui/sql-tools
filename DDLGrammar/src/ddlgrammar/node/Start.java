/* This file was generated by SableCC (http://www.sablecc.org/). */

package ddlgrammar.node;

import ddlgrammar.analysis.*;

@SuppressWarnings("nls")
public final class Start extends Node
{
    private PDdl _pDdl_;
    private EOF _eof_;

    public Start()
    {
        // Empty body
    }

    public Start(
        @SuppressWarnings("hiding") PDdl _pDdl_,
        @SuppressWarnings("hiding") EOF _eof_)
    {
        setPDdl(_pDdl_);
        setEOF(_eof_);
    }

    @Override
    public Object clone()
    {
        return new Start(
            cloneNode(this._pDdl_),
            cloneNode(this._eof_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseStart(this);
    }

    public PDdl getPDdl()
    {
        return this._pDdl_;
    }

    public void setPDdl(PDdl node)
    {
        if(this._pDdl_ != null)
        {
            this._pDdl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pDdl_ = node;
    }

    public EOF getEOF()
    {
        return this._eof_;
    }

    public void setEOF(EOF node)
    {
        if(this._eof_ != null)
        {
            this._eof_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eof_ = node;
    }

    @Override
    void removeChild(Node child)
    {
        if(this._pDdl_ == child)
        {
            this._pDdl_ = null;
            return;
        }

        if(this._eof_ == child)
        {
            this._eof_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(Node oldChild, Node newChild)
    {
        if(this._pDdl_ == oldChild)
        {
            setPDdl((PDdl) newChild);
            return;
        }

        if(this._eof_ == oldChild)
        {
            setEOF((EOF) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    public String toString()
    {
        return "" +
            toString(this._pDdl_) +
            toString(this._eof_);
    }
}
