/* This file was generated by SableCC (http://www.sablecc.org/). */

package mysqlgrm.analysis;

import java.util.*;
import mysqlgrm.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASql(ASql node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADdlSttm(ADdlSttm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADmlSttm(ADmlSttm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreateDdl(ACreateDdl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATruncateDdl(ATruncateDdl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADropDdl(ADropDdl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreateClausel(ACreateClausel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATableDefinition(ATableDefinition node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAColDef(AColDef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABigintType(ABigintType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFloatType(AFloatType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATimestampType(ATimestampType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACharsType(ACharsType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUniqueColConstraint(AUniqueColConstraint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotNullColConstraint(ANotNullColConstraint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotNull(ANotNull node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAdditionColDef(AAdditionColDef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATableConstraintList(ATableConstraintList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryKeyTableConstraint(APrimaryKeyTableConstraint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAForeignKeyTableConstraint(AForeignKeyTableConstraint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATableConstraintTail(ATableConstraintTail node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryKey(APrimaryKey node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAForeignKey(AForeignKey node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentifierList(AIdentifierList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMoreIdentifier(AMoreIdentifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAReferencesClausel(AReferencesClausel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADropClausel(ADropClausel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATruncateClausel(ATruncateClausel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADml(ADml node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInsertClausel(AInsertClausel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValueClauselList(AValueClauselList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValueClausel(AValueClausel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMoreValueClausel(AMoreValueClausel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValues(AValues node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarSingleValue(AVarSingleValue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntSingleValue(AIntSingleValue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFloatSingleValue(AFloatSingleValue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringSingleValue(AStringSingleValue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMoreSingleValue(AMoreSingleValue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloatingPointNumber(TFloatingPointNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIntegerNumber(TIntegerNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInteger(TInteger node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBigint(TBigint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloat(TFloat node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTimestamp(TTimestamp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVarchar(TVarchar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCreate(TCreate node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTable(TTable node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTExists(TExists node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConstraint(TConstraint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTForeign(TForeign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrimary(TPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTKey(TKey node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTUnique(TUnique node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNull(TNull node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReferences(TReferences node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDrop(TDrop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTruncate(TTruncate node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInsert(TInsert node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInto(TInto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTValues(TValues node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVar(TVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStringLiteral(TStringLiteral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
