$comment$
Template fuer die Erzeugung von SQL Abfrage.

Autor
	Hong Phuc Bui
$end$

$comment: ============================ $
$comment: ========= create_table ===== $
$comment: ============================ $

$macro: create_table(name)$
CREATE TABLE IF NOT EXISTS `$name` (
$expand: create_column, separator=",\n"$
$expand: constraints, separator=",\n", before_first=",\n" $

)$insert: table_option$ $insert: delimiter$
$end: create_table$


$comment: ========== create_column ==== $

$macro: create_column(name, sql_type)$
	`$(name)` $(sql_type) $no_eol$
$macro:not_null$ NOT NULL$end: not_null$ $no_eol$
$macro:unique$ UNIQUE$end: unique$
$macro:auto_increment$ AUTO_INCREMENT$end: auto_increment$
$end: create_column$

$comment: =========== constrains ======== $

$macro: constraints (constraints_name)$
$macro: primary_key$ 
	CONSTRAINT `$(constraints_name)` 
		PRIMARY KEY($expand: col, separator=", "$) $no_eol$
$end: primary_key$ 
$macro: foreign_key$ 
	CONSTRAINT `$(constraints_name)` 
		FOREIGN KEY($expand: col, separator=", "$) 
			$expand: references_clausel$ $no_eol$
$end: foreign_key$
$end: constraints$

$comment: ========= references_clausel ===== $

$macro: references_clausel(foreign_tab)$
REFERENCES `$foreign_tab` ($expand: col, separator=", "$) $no_eol$ 
$end: references_clausel$

$comment: ========== col_list ===== $

$macro: col(col_name)$
`$(col_name)`$no_eol$
$end: col$

$comment: ========== table_option ===== $

$text:table_option$
ENGINE=InnoDB DEFAULT CHARACTER SET=utf8 $no_eol$
$end:table_option$



$comment: ============================== $
$comment: ====== drop table ============ $
$comment: ============================== $

$macro: drop_table(name)$
DROP TABLE IF EXISTS `$(name)` $insert: delimiter$
$end: drop_table$

$comment: ============================== $
$comment: ====== truncate table ============ $
$comment: ============================== $

$macro: truncate_table(name)$
TRUNCATE TABLE `$(name)` $insert: delimiter$
$end: truncate_table$

$macro: insert_into(name)$
INSERT INTO `$(name)` ($expand: col, separator=","$) VALUES 
$expand: tupel, separator=",\n"$ 
$insert: delimiter$
$end: insert_into$

$macro: tupel$
($expand: values, separator=", "$)$no_eol$
$end: tupel$

$macro: values(literal)$
$(literal)$no_eol$
$end: values$

$comment: ========== SQL demiliter ===== $

$text:delimiter$ 
;
$end:delimiter$
